<?php

// Строка - обозначение регионов.
define('GF_STOCK_REGION_ALL', 'all');
define('GF_STOCK_REGION_RU', 'ru');
define('GF_STOCK_REGION_CN', 'cn');

/**
 * Implements hook_importkit_stock().
 */
function gf_stock_importkit_stock($entity, $xml_element){
  // Обновляем при импорте данные по остаткам в регионах.
  foreach($xml_element->Остатки->ОстаткиСклада as $element) {
    db_merge('importkit_cml_stock')->key(array(
      'guid1' => $entity->guid1,
      'guid2' => $entity->guid2,
      'nid' => $entity->nid,
      'warehouse' => (string) $element->ИдСклада,
    ))->fields(array(
      'stock' => (string) $element->Остаток,
      'warehouse' => (string) $element->ИдСклада,
      'region' => (string) $element->Регион,
    ))->execute();

  }
}


/**
 * Implements hook_node_load().
 */
function gf_stock_node_load($nodes, $types){
  $result = db_query('SELECT nid, stock, region 
    FROM {importkit_cml_stock} 
    WHERE nid IN(:nids)', array(':nids' => array_keys($nodes),));

  // Добавляем при загрузке нод-товаров поля с данными 
  // по остаткам в регионах.
  foreach ($result as $record) {
    if (!$record->region) continue;
    $stock = (int) $record->stock;
    // Складываем суммы остатков в конкретном регионе для разных представлений.
    if (isset($nodes[$record->nid]->gf_region_stock[$record->region])) {
      $nodes[$record->nid]->gf_region_stock[$record->region] += $stock;
    }
    else{
      $nodes[$record->nid]->gf_region_stock[$record->region] = $stock;
    }
  }
}


/**
 * Implements hook_menu().
 */
function gf_stock_menu() {
  $items['gf_stock/region_switch'] = array(
    'title' => 'Stock Region Switcher',
    'page callback' => 'gf_stock_region_switch',
    'page arguments' => array(2),
    'access arguments' => array(
      'access content',
    ),
    'type' => MENU_CALLBACK,
  );
    $items['admin/importkit/gf_stock'] = array(
      'title' => t('GF Stock'),
      'description' => 'GF Stock module settings',
      'access arguments' => array('administer importkit'),
      'page callback' => 'drupal_get_form',
      'page arguments' => ['gf_stock_settings'],
      'type' => MENU_LOCAL_TASK,
      'weight' => 2,
    );
  return $items;
}


/**
 * Массив со списком доступных регионов.
 */
function gf_stock_get_regions() {
  return [
    GF_STOCK_REGION_CN => GF_STOCK_REGION_CN,
    GF_STOCK_REGION_RU => GF_STOCK_REGION_RU 
  ];

}


/**
 * Переключение региона пользователя.
 */
function gf_stock_region_switch($region=''){
  if ($region) {
    $regions = gf_stock_get_regions();
    if (!in_array($region, $regions)) return;
    else {
      // Метку о выбранном регионе кладем пользователю в сессию.
      $_SESSION['gf_stock_region'] = $regions[$region];
    }
  }
  // Если регион не получе - обнуляем параметр в сессии.
  elseif (isset($_SESSION['gf_stock_region'])) {
    unset($_SESSION['gf_stock_region']);
  }
  drupal_goto();
}


/**
 * Implements hook_block_info().
 *
 */
function gf_stock_block_info() {
  $blocks['gf_stock_region_switch'] = array(
    'info' => t('GF Stock: user region switcher'),
    'cache' => DRUPAL_NO_CACHE,
  );
  return $blocks;
}


/**
 * Implements hook_block_view().
 *
 */
function gf_stock_block_view($delta = '') {
  switch ($delta) {
    case 'gf_stock_region_switch':
      $block['subject'] = 'Select warehouse region';
      $block['content'] = gf_stock_block_contents($delta);
      break;
  }
  return $block;
}

/**
 * A module-defined block content function.
 */
function gf_stock_block_contents($block) {
  switch ($block) {
    case 'gf_stock_region_switch':
      $regions = [];

      $region_switch_path = 'gf_stock/region_switch';
      $link_options = [ 
        'query' => drupal_get_destination(), 
        'html' => true,
      ];

      $regions[GF_STOCK_REGION_ALL] = l(t('All'), $region_switch_path, $link_options);

      foreach(array_keys(gf_stock_get_regions()) as $region) {
        $regions[$region] = l($region, $region_switch_path . '/' . $region, $link_options);
      }
      return theme('gf_stock_block_region_switcher', [
        'regions' => $regions, 
        'current_region' => gf_stock_get_current_region()
      ]);
  }
}


function gf_stock_get_current_region() {
  $default_region = variable_get('gf_stock_default_region', GF_STOCK_REGION_ALL);
  return isset($_SESSION['gf_stock_region']) ? $_SESSION['gf_stock_region'] : $default_region;
}


/**
 * Implements hook_theme().
 */
function gf_stock_theme($existing, $type, $theme, $path) {
  return [
    'gf_stock_block_region_switcher' => [
      'variables' => [
        'regions' => [],
        'current_region' => NULL,
      ],
      'path' => drupal_get_path('module', 'gf_stock') . '/theme',
      'template' => 'gf_stock_block_region_switcher',
    ],
  ];

}


/**
 * Форма натроек модуля.
 */
function gf_stock_settings() {
  $options = [];
  $options[GF_STOCK_REGION_ALL] = t('All');
  foreach(gf_stock_get_regions() as $name => $region){
    $options[$name] = $region;
  }
  $form['gf_stock_default_region'] = array(
    '#type' => 'select',
    '#title' => t('Default Region'),
    '#description' => t('The stock region that will be selected if the user did`t select their region.'),
    '#options' => $options,
    '#default_value' => variable_get('gf_stock_default_region', GF_STOCK_REGION_ALL),
  );
  return system_settings_form($form);
}


/**
 * Implements hook_views_api().
 */
function gf_stock_views_api() {
  return array(
    'api' => 3,
    'path' => drupal_get_path('module', 'gf_stock') . '/views',
  );
}
